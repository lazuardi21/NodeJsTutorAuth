// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tutorial {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  published   Boolean
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String   @unique
  password String
  roles    Role[]   // Define the opposite relation to Role model
  userRoles UserRole[]
  refreshToken RefreshToken?   // Add the opposite relation to RefreshToken model
}

model Role {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  users  User[]  // Define the opposite relation to User model
  userRoles UserRole[]
}

model UserRole {
  userId Int
  roleId Int

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model RefreshToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  expiryDate DateTime
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
}